{"version":3,"sources":["components/screen/scrollableComponent.js","components/screen/index.js","actions/index.js","components/keypad/index.js","App.js","reducers/entryReducer.js","reducers/index.js","index.js"],"names":["ScrollableComponent","children","className","useState","dragMode","setDragMode","pointer","setPointer","scroll","setScroll","componentRef","useRef","handleMouseDown","point","current","scrollLeft","useLayoutEffect","handleMouseUp","handleMouseMove","e","pageX","handleTouchEnd","handleTouchMove","touches","window","addEventListener","removeEventListener","ref","onMouseDown","onTouchStart","useStyle","makeStyles","screen","height","userSelect","box","padding","border","equation","overflow","display","flexDirection","alignItems","color","whiteSpace","letterSpacing","entry","justifyContent","text","fontSize","Screen","useSelector","state","calculator","setFontSize","classes","containerRef","entryRef","parseFloat","getComputedStyle","getPropertyValue","offsetWidth","offsetHeight","container","widthPercentage","length","heightPercentage","resize","Box","borderRadius","Typography","variant","operation","type","payload","useStyles","keypad","paddingTop","numpad","buttonContainer","button","equals","backgroundColor","delete","Keypad","dispatch","useDispatch","entryHandler","value","Grid","direction","item","xs","justify","Button","fullWidth","onClick","root","minHeight","minWidth","paper","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","Fragment","ThemeProvider","CssBaseline","Container","maxWidth","Paper","elevation","initialState","operand","memory","decimalMode","entryMode","equalsMode","previousOperation","entryReducer","calculate","firstOperand","secondOperand","slice","operators","proceedOperation","calculatedValue","toString","operationController","equalOperation","reducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53168dde.chunk.js","sourcesContent":["import React, { useLayoutEffect, useState, useRef } from \"react\";\r\n\r\nconst ScrollableComponent = ({ children, className }) => {\r\n  const [dragMode, setDragMode] = useState(false);\r\n  const [pointer, setPointer] = useState();\r\n  const [scroll, setScroll] = useState();\r\n  const componentRef = useRef();\r\n\r\n  const handleMouseDown = point => {\r\n    setPointer(point);\r\n    setScroll(componentRef.current.scrollLeft);\r\n    setDragMode(true);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    const handleMouseUp = () => {\r\n      setDragMode(false);\r\n    };\r\n\r\n    const handleMouseMove = e => {\r\n      componentRef.current.scrollLeft = scroll - (e.pageX - pointer);\r\n    };\r\n\r\n    const handleTouchEnd = () => {\r\n      setDragMode(false);\r\n    };\r\n\r\n    const handleTouchMove = e => {\r\n      componentRef.current.scrollLeft = scroll - (e.touches[0].pageX - pointer);\r\n    };\r\n\r\n    if (dragMode) {\r\n      window.addEventListener(\"mouseup\", handleMouseUp);\r\n      window.addEventListener(\"mousemove\", handleMouseMove);\r\n      window.addEventListener(\"touchend\", handleTouchEnd);\r\n      window.addEventListener(\"touchmove\", handleTouchMove);\r\n    } else {\r\n      window.removeEventListener(\"mouseup\", handleMouseUp);\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n      window.removeEventListener(\"touchend\", handleTouchEnd);\r\n      window.removeEventListener(\"touchmove\", handleTouchMove);\r\n    }\r\n    return () => {\r\n      window.removeEventListener(\"mouseup\", handleMouseUp);\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n      window.removeEventListener(\"touchend\", handleTouchEnd);\r\n      window.removeEventListener(\"touchmove\", handleTouchMove);\r\n    };\r\n  }, [dragMode, pointer, scroll]);\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n      ref={componentRef}\r\n      onMouseDown={e => handleMouseDown(e.pageX)}\r\n      onTouchStart={e => handleMouseDown(e.touches[0].pageX)}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollableComponent;\r\n","import React, { useRef, useLayoutEffect, useState } from \"react\";\r\nimport { makeStyles, Typography, Box } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ScrollableComponent from \"./scrollableComponent\";\r\n\r\nconst useStyle = makeStyles({\r\n  screen: {\r\n    height: \"30%\",\r\n    userSelect: \"none\"\r\n  },\r\n  box: {\r\n    height: \"100%\",\r\n    padding: 10,\r\n    border: \"1px solid #b6b6b6\"\r\n  },\r\n\r\n  equation: {\r\n    overflow: \"hidden\",\r\n\r\n    display: \"flex\",\r\n    height: \"30%\",\r\n    flexDirection: \"row-reverse\",\r\n    alignItems: \"center\",\r\n    color: \"#757575\",\r\n    whiteSpace: \"nowrap\",\r\n    letterSpacing: 1\r\n  },\r\n  entry: {\r\n    display: \"flex\",\r\n    height: \"70%\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  text: {\r\n    fontSize: ({ fontSize }) => fontSize\r\n  }\r\n});\r\n\r\nconst Screen = () => {\r\n  const equation = useSelector(state => state.calculator.equation);\r\n  const entry = useSelector(state => state.calculator.entry);\r\n\r\n  const [fontSize, setFontSize] = useState();\r\n  const classes = useStyle({ fontSize });\r\n  const containerRef = useRef();\r\n  const entryRef = useRef();\r\n\r\n  useLayoutEffect(() => {\r\n    const fontSize = parseFloat(\r\n      window.getComputedStyle(entryRef.current).getPropertyValue(\"font-size\")\r\n    );\r\n    const text = {\r\n      width: entryRef.current.offsetWidth,\r\n      height: entryRef.current.offsetHeight\r\n    };\r\n    const container = {\r\n      width: containerRef.current.offsetWidth,\r\n      height: containerRef.current.offsetHeight\r\n    };\r\n\r\n    const widthPercentage = text.width / entry.length / fontSize;\r\n    const heightPercentage = text.height / fontSize;\r\n    const resize = () => {\r\n      return container.width / entry.length / widthPercentage;\r\n    };\r\n    if (text.height < container.height) {\r\n      const size = resize();\r\n\r\n      if (size * heightPercentage > container.height) {\r\n        const fontSize = container.height / heightPercentage;\r\n        setFontSize(fontSize);\r\n      } else {\r\n        setFontSize(resize());\r\n      }\r\n    } else if (text.width > container.width) {\r\n      setFontSize(resize());\r\n    }\r\n  }, [entry, fontSize]);\r\n\r\n  return (\r\n    <div className={classes.screen}>\r\n      <Box className={classes.box} borderRadius={5}>\r\n        <ScrollableComponent className={classes.equation}>\r\n          <Typography variant=\"h5\">{equation}</Typography>\r\n        </ScrollableComponent>\r\n\r\n        <span className={classes.entry} ref={containerRef}>\r\n          <Typography className={classes.text} ref={entryRef}>\r\n            {entry}\r\n          </Typography>\r\n        </span>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Screen;\r\n","export const entry = entry => {\r\n  return {\r\n    type: \"ENTRY\",\r\n    payload: entry\r\n  };\r\n};\r\n\r\nexport const del = () => {\r\n  return {\r\n    type: \"DELETE\"\r\n  };\r\n};\r\nexport const clear = () => {\r\n  return {\r\n    type: \"CLEAR\"\r\n  };\r\n};\r\n\r\nexport const decimal = () => {\r\n  return {\r\n    type: \"DECIMAL\"\r\n  };\r\n};\r\n\r\nexport const operation = operation => {\r\n  return {\r\n    type: \"OPERATION\",\r\n    payload: operation\r\n  };\r\n};\r\n\r\nexport const equals = () => {\r\n  return {\r\n    type: \"EQUALS\"\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Button, makeStyles } from \"@material-ui/core\";\r\nimport { entry, del, clear, decimal, operation, equals } from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  keypad: {\r\n    paddingTop: 5,\r\n    height: \"70%\"\r\n  },\r\n  numpad: {\r\n    height: \"100%\"\r\n  },\r\n  buttonContainer: {\r\n    padding: 5\r\n  },\r\n  button: {\r\n    height: \"100%\",\r\n    fontSize: 20\r\n  },\r\n  equals: {\r\n    color: \"#262020\",\r\n    backgroundColor: \"#8b8c97\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#a3a4ac\"\r\n    }\r\n  },\r\n  delete: {\r\n    backgroundColor: \"#c72a2a\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#e54e4e\"\r\n    }\r\n  },\r\n  operation: {\r\n    backgroundColor: \"#666666\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"grey\"\r\n    }\r\n  }\r\n});\r\nconst Keypad = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const entryHandler = value => {\r\n    dispatch(entry(value));\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.keypad} container direction=\"row\">\r\n      <Grid item xs={9}>\r\n        <Grid\r\n          className={classes.numpad}\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"stretch\"\r\n        >\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"7\")}\r\n            >\r\n              7\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"8\")}\r\n            >\r\n              8\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"9\")}\r\n            >\r\n              9\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"4\")}\r\n            >\r\n              4\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"5\")}\r\n            >\r\n              5\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"6\")}\r\n            >\r\n              6\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"1\")}\r\n            >\r\n              1\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"2\")}\r\n            >\r\n              2\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"3\")}\r\n            >\r\n              3\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => dispatch(decimal())}\r\n            >\r\n              .\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => entryHandler(\"0\")}\r\n            >\r\n              0\r\n            </Button>\r\n          </Grid>\r\n          <Grid className={classes.buttonContainer} item xs={4}>\r\n            <Button\r\n              className={`${classes.button} ${classes.equals}`}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => dispatch(equals())}\r\n            >\r\n              =\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <Grid className={classes.numpad} container direction=\"row\" alignItems=\"stretch\">\r\n          <Grid className={classes.buttonContainer} item xs={12}>\r\n            <Button\r\n              className={`${classes.button} ${classes.delete}`}\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => dispatch(del())}\r\n            >\r\n              DEL\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid className={classes.buttonContainer} item xs={12}>\r\n            <Button\r\n              className={`${classes.button} ${classes.delete}`}\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => dispatch(clear())}\r\n            >\r\n              C\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid className={classes.buttonContainer} item xs={12}>\r\n            <Button\r\n              className={`${classes.button} ${classes.operation}`}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => dispatch(operation(\"DIVIDE\"))}\r\n            >\r\n              ÷\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid className={classes.buttonContainer} item xs={12}>\r\n            <Button\r\n              className={`${classes.button} ${classes.operation}`}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => dispatch(operation(\"MULTIPLY\"))}\r\n            >\r\n              x\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid className={classes.buttonContainer} item xs={12}>\r\n            <Button\r\n              className={`${classes.button} ${classes.operation}`}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => dispatch(operation(\"SUBTRACT\"))}\r\n            >\r\n              -\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid className={classes.buttonContainer} item xs={12}>\r\n            <Button\r\n              className={`${classes.button} ${classes.operation}`}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth={true}\r\n              onClick={() => dispatch(operation(\"ADD\"))}\r\n            >\r\n              +\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Keypad;\r\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Screen from \"./components/screen\";\nimport Keypad from \"./components/keypad\";\n\nconst useStyles = makeStyles({\n  \"@global\": {\n    \"html, body, #root\": {\n      height: \"100%\"\n    }\n  },\n\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    minHeight: 700,\n    minWidth: 400\n  },\n  container: {\n    height: 600\n  },\n  paper: {\n    height: \"100%\",\n    padding: 10\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#002884\",\n      contrastText: \"#fff\"\n    },\n    secondary: {\n      light: \"#ff5131\",\n      main: \"#d50000\",\n      dark: \"#9b0000\",\n      contrastText: \"#ffffff\"\n    }\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className={classes.root}>\n          <Container className={classes.container} maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={5}>\n              <Screen></Screen>\n              <Keypad></Keypad>\n            </Paper>\n          </Container>\n        </div>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  equation: \"\",\r\n  entry: \"0\",\r\n  operand: null,\r\n  memory: null,\r\n  decimalMode: false,\r\n  entryMode: true,\r\n  equalsMode: false,\r\n  previousOperation: \"\"\r\n};\r\n\r\nconst entryReducer = (state = initialState, { type, payload }) => {\r\n  const {\r\n    equation,\r\n    entry,\r\n    operand,\r\n    memory,\r\n    decimalMode,\r\n    entryMode,\r\n    equalsMode,\r\n    previousOperation\r\n  } = state;\r\n\r\n  const calculate = (firstOperand, secondOperand, operation) => {\r\n    switch (operation) {\r\n      case \"+\": {\r\n        return firstOperand + secondOperand;\r\n      }\r\n      case \"-\": {\r\n        return firstOperand - secondOperand;\r\n      }\r\n      case \"÷\": {\r\n        return firstOperand / secondOperand;\r\n      }\r\n      case \"x\": {\r\n        return firstOperand * secondOperand;\r\n      }\r\n      default: {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n  switch (type) {\r\n    case \"ENTRY\": {\r\n      if (entry.length < 18 || entryMode) {\r\n        if ((entryMode || entry === \"0\") && !equalsMode) {\r\n          return { ...state, entry: payload, entryMode: false };\r\n        }\r\n        if (equalsMode && entryMode) {\r\n          return {\r\n            ...state,\r\n            entry: payload,\r\n            equation: \"\",\r\n            operand: null,\r\n            entryMode: false\r\n          };\r\n        }\r\n        return { ...state, entry: `${entry}${payload}`, entryMode: false };\r\n      }\r\n      return state;\r\n    }\r\n    case \"DELETE\": {\r\n      if (entry.length < 2) {\r\n        return { ...state, entry: \"0\" };\r\n      } else if (!entryMode) {\r\n        if (entry.slice(-1) === \".\") {\r\n          return { ...state, entry: entry.slice(0, -1), decimalMode: false };\r\n        }\r\n        return { ...state, entry: entry.slice(0, -1) };\r\n      }\r\n      return state;\r\n    }\r\n    case \"CLEAR\": {\r\n      return initialState;\r\n    }\r\n    case \"DECIMAL\": {\r\n      if (!decimalMode && !entryMode) {\r\n        return { ...state, entry: `${entry}.`, entryMode: false, decimalMode: true };\r\n      } else if (!decimalMode && entryMode) {\r\n        return { ...state, entry: \"0.\", entryMode: false, decimalMode: true };\r\n      }\r\n      return state;\r\n    }\r\n    case \"OPERATION\": {\r\n      const operation = operators => {\r\n        switch (operators) {\r\n          case \"ADD\": {\r\n            return proceedOperation(\"+\");\r\n          }\r\n          case \"SUBTRACT\": {\r\n            return proceedOperation(\"-\");\r\n          }\r\n          case \"MULTIPLY\": {\r\n            return proceedOperation(\"x\");\r\n          }\r\n          case \"DIVIDE\": {\r\n            return proceedOperation(\"÷\");\r\n          }\r\n          default: {\r\n            return state;\r\n          }\r\n        }\r\n      };\r\n      const proceedOperation = operators => {\r\n        if ((operand === null && !entryMode) || (entryMode && entry === \"0\") || equalsMode) {\r\n          return {\r\n            ...state,\r\n            equation: `${entry}${operators}`,\r\n            operand: parseFloat(entry),\r\n            entryMode: true,\r\n            equalsMode: false\r\n          };\r\n        } else if (!entryMode) {\r\n          const calculatedValue = calculate(operand, parseFloat(entry), operators);\r\n          return {\r\n            ...state,\r\n            equation: `${equation}${entry}${operators}`,\r\n            entry: calculatedValue.toString(),\r\n            operand: calculatedValue,\r\n            entryMode: true\r\n          };\r\n        }\r\n      };\r\n\r\n      const operationController = operators => {\r\n        if (!entryMode || (entry === \"0\" && entryMode && operand === null)) {\r\n          if (previousOperation !== \"\" && previousOperation !== payload && !equalsMode) {\r\n            return {\r\n              ...operation(previousOperation),\r\n              equation: `${equation}${entry}${operators}`,\r\n              previousOperation: payload,\r\n              decimalMode: false\r\n            };\r\n          } else {\r\n            return {\r\n              ...operation(payload),\r\n              previousOperation: payload,\r\n              decimalMode: false\r\n            };\r\n          }\r\n        } else if (equalsMode) {\r\n          return {\r\n            ...operation(payload),\r\n            previousOperation: payload,\r\n            decimalMode: false,\r\n            equalsMode: false\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            equation: `${equation.slice(0, -1)}${operators}`,\r\n            previousOperation: payload\r\n          };\r\n        }\r\n      };\r\n\r\n      switch (payload) {\r\n        case \"ADD\": {\r\n          return operationController(\"+\");\r\n        }\r\n        case \"SUBTRACT\": {\r\n          return operationController(\"-\");\r\n        }\r\n        case \"MULTIPLY\": {\r\n          return operationController(\"x\");\r\n        }\r\n        case \"DIVIDE\": {\r\n          return operationController(\"÷\");\r\n        }\r\n        default: {\r\n          return state;\r\n        }\r\n      }\r\n    }\r\n    case \"EQUALS\": {\r\n      const equalOperation = operators => {\r\n        if (memory === null || !equalsMode) {\r\n          const calculatedValue = calculate(operand, parseFloat(entry), operators);\r\n          return {\r\n            ...state,\r\n            memory: parseFloat(entry),\r\n            operand: calculatedValue,\r\n            equation: `${equation}${entry}=`,\r\n            entry: calculatedValue.toString(),\r\n            decimalMode: false,\r\n            entryMode: true,\r\n            equalsMode: true\r\n          };\r\n        } else {\r\n          const calculatedValue = calculate(operand, memory, operators);\r\n          return {\r\n            ...state,\r\n            operand: calculatedValue,\r\n            equation: `${entry}${operators}${memory}=`,\r\n            entry: calculatedValue.toString(),\r\n            decimalMode: false,\r\n            entryMode: true,\r\n            equalsMode: true\r\n          };\r\n        }\r\n      };\r\n      switch (previousOperation) {\r\n        case \"ADD\": {\r\n          return equalOperation(\"+\");\r\n        }\r\n        case \"SUBTRACT\": {\r\n          return equalOperation(\"-\");\r\n        }\r\n        case \"MULTIPLY\": {\r\n          return equalOperation(\"x\");\r\n        }\r\n        case \"DIVIDE\": {\r\n          return equalOperation(\"÷\");\r\n        }\r\n\r\n        default: {\r\n          return {\r\n            ...state,\r\n            equation: `${entry}=`,\r\n            entryMode: true\r\n          };\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default entryReducer;\r\n","import entryReducer from \"./entryReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst reducers = combineReducers({\r\n  calculator: entryReducer\r\n});\r\n\r\nexport default reducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport reducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}